a:2:{s:7:"current";a:5:{s:4:"date";a:2:{s:7:"created";i:1229799475;s:8:"modified";i:1229799492;}s:11:"last_change";a:7:{s:4:"date";i:1229799492;s:2:"ip";s:14:"76.186.115.254";s:4:"type";s:1:"E";s:2:"id";s:18:"deployment:haproxy";s:4:"user";N;s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:5:"title";s:31:"Deploying your app with HAProxy";s:11:"description";a:2:{s:15:"tableofcontents";a:2:{i:0;a:4:{s:3:"hid";s:31:"deploying_your_app_with_haproxy";s:5:"title";s:31:"Deploying your app with HAProxy";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:22:"hapong_rack_middleware";s:5:"title";s:22:"HAPong Rack Middleware";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:290:"# this is our main merb application
merb =  Merb::Rack::Application.new

hapong = lambda do |env|
  if env["REQUEST_METHOD"] == "OPTIONS" && env["REQUEST_URI"] == "/"
    [200, {}, "PONG!\n"]
  else
    [404, {}, "No PONG! here, move along"]
  end
end

run Rack::Cascade.new([hapong, merb])";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:2:{s:4:"date";a:2:{s:7:"created";i:1229799475;s:8:"modified";i:1229799492;}s:11:"last_change";a:7:{s:4:"date";i:1229799492;s:2:"ip";s:14:"76.186.115.254";s:4:"type";s:1:"E";s:2:"id";s:18:"deployment:haproxy";s:4:"user";N;s:3:"sum";s:0:"";s:5:"extra";s:0:"";}}}